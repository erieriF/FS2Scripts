local localPlayer = game:GetService("Players").LocalPlayer

PlaceId, JobId = game.PlaceId, game.JobId
local TeleportService = game:GetService("TeleportService")

local function getClosest()
    local closestZombie = nil
    local shortestDistance = math.huge
    
    for _,v in pairs(game:GetService("Workspace").Zombies:GetChildren()) do
        if v:FindFirstChild("Zombie") and v.Zombie.Health ~= 0 and v:FindFirstChild("Torso") and v:FindFirstChild("Head") then
            local magnitude = (v.Torso.Position - localPlayer.Character.Torso.Position).Magnitude

            if magnitude < shortestDistance then
                closestZombie = v
                shortestDistance = magnitude
            end
        end
    end

    return closestZombie
end
local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow("The Final Stand 2 Scripts")

local b = w:CreateFolder("Melee Weapon Auras") 

local c = w:CreateFolder("Misc")

c:Button("Silent Aim", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/kinhey/scripts/main/silentaim.lua"))()
end)

c:Button("Rejoin Game (public only)", function()
    if #game.Players:GetPlayers() <= 1 then
       localPlayer:Kick("\nRejoining.")
       wait()
       TeleportService:Teleport(PlaceId, localPlayer)
       else
           TeleportService:TeleportToPlaceInstance(PlaceId, JobId, localPlayer)
    end
end)

b:Button("Knife Aura",function()
  

while true do

local args = {
    [1] = "Melee",
    [2] = {
        [1] = {
            [2] = {},
            [1] = getClosest():FindFirstChild("Head")
        }
    }
}

game:GetService("ReplicatedStorage").RemoteEvents.RemoteFireMelee:FireServer(unpack(args))
   game["Run Service"].Stepped:Wait()

end

end)
b:Button("Baseball Bat Aura",function()
    
local localPlayer = game:GetService("Players").LocalPlayer

while true do
    game:GetService("RunService").Stepped:Wait()
spawn(function()
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character:FindFirstChild("Baseball Bat"),
    [2] = {
        [1] = {
            [1] = getClosest():FindFirstChild("Head"),
            [2] = {
                ["Critical"] = true,
                ["OverDamage"] = true,
                ["ActiveAnimation"] = "Over"
            }
        }
    },
    [3] = {
        ["ActiveAnimation"] = "Over"
    }
}

game:GetService("ReplicatedStorage").RemoteEvents.RemoteFireMelee:FireServer(unpack(args))
end)
end
end)
b:Button("Military Axe Aura",function()
    
while true do
    game:GetService("RunService").Stepped:Wait()
spawn(function()
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character:FindFirstChild("Military Axe"),
    [2] = {
        [1] = {
            [1] = getClosest():FindFirstChild("Head"),
            [2] = {
                ["Critical"] = true,
                ["OverDamage"] = true,
                ["ActiveAnimation"] = "Over"
            }
        }
    },
    [3] = {
        ["ActiveAnimation"] = "Over"
    }
}

game:GetService("ReplicatedStorage").RemoteEvents.RemoteFireMelee:FireServer(unpack(args))
end)
end
end)
b:Button("Katana Aura",function()
    
while true do
    game:GetService("RunService").Stepped:Wait()

spawn(function()
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character:FindFirstChild("Katana"),
    [2] = {
        [1] = {
            [1] = getClosest():FindFirstChild("Head"),
            [2] = {
                ["Critical"] = true,
                ["OverDamage"] = true,
                ["ActiveAnimation"] = "Over"
            }
        }
    },
    [3] = {
        ["ActiveAnimation"] = "Over"
    }
}

game:GetService("ReplicatedStorage").RemoteEvents.RemoteFireMelee:FireServer(unpack(args))
end)
end
end)
b:Button("Energy Sword Aura",function()
    
while true do
    game:GetService("RunService").Stepped:Wait()
spawn(function()
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character:FindFirstChild("Energy Sword"),
    [2] = {
        [1] = {
            [1] = getClosest():FindFirstChild("Head"),
            [2] = {
                ["Critical"] = true,
                ["ActiveAnimation"] = "Right",
                ["AltDamage"] = true
            }
        }
    },
    [3] = {
        ["ActiveAnimation"] = "Right"
    }
}

game:GetService("ReplicatedStorage").RemoteEvents.RemoteFireMelee:FireServer(unpack(args))
end)
end
end)
